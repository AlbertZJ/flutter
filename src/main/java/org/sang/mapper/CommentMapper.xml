<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sang.mapper.CommentMapper">

    <insert id="addNewComment" parameterType="org.sang.bean.Comment" useGeneratedKeys="true" keyProperty="id">
       INSERT INTO comments SET publishDate=#{publishDate},content=#{content},uid=#{uid},state=#{state}
    </insert>

    <!--    <update id="pvIncrement" parameterType="Long">-->
    <!--        UPDATE notice set pageView=pageView+1 WHERE id=#{aid}-->
    <!--    </update>-->

    <update id="updateComment" parameterType="org.sang.bean.Comment">
        UPDATE comments SET
        content=#{content}
        <if test="state==1">
            ,state=1
        </if>
        <if test="publishDate!=null">
            ,publishDate=#{publishDate}
        </if>
        WHERE id=#{id}
    </update>

    <select id="getCommentByState" resultType="org.sang.bean.Comment">
        SELECT c.id,c.`content`,c.`publishDate`,c.`state`,u.`nickname`,c.uid,a.title,c.`aid` FROM comments AS c,article
        AS a,USER AS
        u WHERE c.`uid`=u.`id` AND a.`id`=c.`aid`
        <if test="state!=-2">
            and c.uid=#{uid}
        </if>
        <if test="state!=-1 and state!=-2">
            and c.state=#{state}
        </if>
        <if test="state==-2">
            and c.state=1
        </if>
        <if test="keywords!=null">
            AND content LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY c.publishDate DESC limit #{start},#{count};
    </select>

    <select id="getComByState" resultType="org.sang.bean.Comment">
        SELECT c.id,c.`content`,c.`publishDate`,c.`state`,u.`nickname`,c.uid FROM comments AS c,USER AS
        u WHERE c.`uid`=u.`id`
        <if test="state!=-2">
            and c.uid=#{uid}
        </if>
        <if test="state!=-1 and state!=-2">
            and c.state=#{state}
        </if>
        <if test="state==-2">
            and c.state=1
        </if>
        ORDER BY c.publishDate DESC limit #{start},#{count};
    </select>

    <select id="getCommentByStateByAdmin" resultType="org.sang.bean.Comment">
        SELECT c.id,c.`content`,c.`publishDate`,c.`state`,u.`nickname`,c.uid FROM comments AS c,USER AS u WHERE
        c.`uid`=u.`id` AND c.state=1
        <if test="keywords!=null">
            AND content LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY c.publishDate DESC limit #{start},#{count};
    </select>

    <select id="getCommentCountByState" resultType="int">
        SELECT count(*) FROM comments
        <where>
            <if test="state!=-1">
                AND state=#{state}
            </if>
            <if test="uid!=null">
                AND uid=#{uid}
            </if>
            <if test="keywords!=null">
                AND content LIKE concat('%',#{keywords},'%')
            </if>
        </where>
    </select>

    <select id="getComCountByState" resultType="int">
        SELECT count(*) FROM comments
        <where>
            <if test="state!=-1">
                AND state=#{state}
            </if>
            <if test="uid!=null">
                AND uid=#{uid}
            </if>
        </where>
    </select>

    <update id="updateCommentState">
        UPDATE comments SET state=#{state} WHERE id IN
        <foreach collection="aids" item="aid" separator="," open="(" close=")">
            #{aid}
        </foreach>
    </update>

    <update id="updateCommentStateById">
        UPDATE comments SET state=#{state} WHERE id = #{commentId}
    </update>

    <update id="updateCommentByIds">
        UPDATE comments SET state=2 WHERE id = #{id}
    </update>

    <delete id="deleteCommentById">
        DELETE FROM comments WHERE id IN
        <foreach collection="aids" item="aid" open="(" close=")" separator=",">
            #{aid}
        </foreach>
    </delete>

    <select id="getCommentById" parameterType="Long" resultMap="BaseResultMap">
         SELECT c.id,c.content,c.publishDate,u.nickname,c.state FROM comments AS c,USER AS u WHERE c.uid=u.id and c.id=#{aid}
    </select>

    <select id="getComById" parameterType="Long" resultMap="BaseResultMap">
    SELECT c.id,c.content,c.publishDate AS comDate,u.nickname AS comName,c.state,u.userface,co.countlike,co.countdislike,c.parentId,c.`uid`
 FROM comments AS c,USER AS u,countcomlikes AS co
 WHERE c.uid=u.id  AND co.cid=c.`id` AND c.aid=#{aid} AND c.`parentId`=-1 and c.state=1
     </select>

    <select id="getCom" parameterType="Long" resultMap="BaseResultMap">
    SELECT c.id,c.content,c.publishDate AS comDate,u.nickname AS comName,c.state,u.userface,co.countlike,co.countdislike,c.parentId,c.`uid`
 FROM comments AS c,USER AS u,countcomlikes AS co
 WHERE c.uid=u.id  AND co.cid=c.`id` AND c.aid=#{aid} AND c.`parentId`=-1 AND c.`state`=1
     </select>

    <select id="getOne" parameterType="Long" resultMap="BaseResultMap">
   SELECT c.id,c.content,c.publishDate AS comDate,u.nickname AS comName,c.state,u.userface,co.countlike,co.countdislike,c.uid
 FROM comments AS c,USER AS u,countcomlikes AS co
 WHERE c.uid=u.id  AND co.cid=c.`id` AND c.parentId=#{parentId} AND c.state=1
     </select>

    <select id="selectcid" parameterType="org.sang.bean.Comment" resultMap="BaseResultMap">
        select id from comments where publishDate=#{publishDate} and uid=#{uid}
     </select>


    <insert id="add" parameterType="org.sang.bean.Comment">
insert into comments set aid=#{aid},content=#{content},publishDate=#{publishDate},parentId=#{parentId},uid=#{uid}
    </insert>

    <delete id="deleteCommentByIds">
       DELETE  FROM comments WHERE id=#{id}
    </delete>

    <resultMap id="BaseResultMap" type="org.sang.bean.Comment">
        <id column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="aid" property="aid"/>
        <result column="uid" property="uid"/>
        <result column="publishDate" property="publishDate"/>
        <result column="parentId" property="parentId"/>
        <result column="state" property="state"/>
        <result column="countlike" property="countlike"/>
        <result column="countdislike" property="countdislike"/>
        <result column="nickname" property="nickname"/>
    </resultMap>
</mapper>

